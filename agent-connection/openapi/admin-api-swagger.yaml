paths:
  /plugins:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/AdminModules'
          description: ""
      tags:
        - server
      summary: Fetch the list of loaded plugins
      produces:
        - application/json
  /status:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/AdminStatus'
          description: ""
      tags:
        - server
      summary: Fetch the server status
      produces:
        - application/json
  /status/reset:
    post:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/AdminStatus'
          description: ""
      tags:
        - server
      summary: Reset statistics
      produces:
        - application/json
  '/action-menu/{id}/close':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - action-menu
      summary: Close the active menu associated with a connection
      produces:
        - application/json
  '/action-menu/{id}/fetch':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - action-menu
      summary: Fetch the active menu
      produces:
        - application/json
  '/action-menu/{id}/perform':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/PerformRequest'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - action-menu
      summary: Perform an action associated with the active menu
      produces:
        - application/json
  '/action-menu/{id}/request':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - action-menu
      summary: Request the active menu
      produces:
        - application/json
  '/connections/{id}/send-menu':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/SendMenu'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - action-menu
      summary: Send an action menu to a connection
      produces:
        - application/json
  '/issue-credential/mime-types/{credential_id}':
    get:
      parameters:
        - in: path
          name: credential_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10AttributeMimeTypesResult'
          description: ""
      tags:
        - issue-credential
      summary: Get attribute MIME types from wallet
      produces:
        - application/json
  /issue-credential/records:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchangeListResult'
          description: ""
      tags:
        - issue-credential
      summary: Fetch all credential exchange records
      produces:
        - application/json
  '/issue-credential/records/{cred_ex_id}':
    get:
      parameters:
        - in: path
          name: cred_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: Fetch a single credential exchange record
      produces:
        - application/json
  /issue-credential/send:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10CredentialProposalRequestMand'
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: 'Send holder a credential, automating entire flow'
      produces:
        - application/json
  /issue-credential/send-proposal:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10CredentialProposalRequestOpt'
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: Send issuer a credential proposal
      produces:
        - application/json
  /issue-credential/send-offer:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10CredentialOfferRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: 'Send holder a credential offer, independent of any proposal with preview'
      produces:
        - application/json
  '/issue-credential/records/{cred_ex_id}/send-offer':
    post:
      parameters:
        - in: path
          name: cred_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: Send holder a credential offer in reference to a proposal with preview
      produces:
        - application/json
  '/issue-credential/records/{cred_ex_id}/send-request':
    post:
      parameters:
        - in: path
          name: cred_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: Send issuer a credential request
      produces:
        - application/json
  '/issue-credential/records/{cred_ex_id}/issue':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10CredentialIssueRequest'
        - in: path
          name: cred_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: Send holder a credential
      produces:
        - application/json
  '/issue-credential/records/{cred_ex_id}/store':
    post:
      parameters:
        - in: path
          name: cred_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10CredentialExchange'
          description: ""
      tags:
        - issue-credential
      summary: Store a received credential
      produces:
        - application/json
  '/issue-credential/records/{cred_ex_id}/problem-report':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10CredentialProblemReportRequest'
        - in: path
          name: cred_ex_id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - issue-credential
      summary: Send a problem report for credential exchange
      produces:
        - application/json
  '/issue-credential/records/{cred_ex_id}/remove':
    post:
      parameters:
        - in: path
          name: cred_ex_id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - issue-credential
      summary: Remove an existing credential exchange record
      produces:
        - application/json
  /presentation_exchange:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/PresentationExchangeList'
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Fetch all presentation exchange records
      produces:
        - application/json
  '/presentation_exchange/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/PresentationExchange'
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Fetch a single presentation exchange record
      produces:
        - application/json
  '/presentation_exchange/{id}/credentials':
    get:
      parameters:
        - name: start
          in: query
          type: string
          required: false
        - name: count
          in: query
          type: string
          required: false
        - name: extra_query
          in: query
          type: string
          required: false
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Fetch credentials for a presentation request from wallet
      produces:
        - application/json
  '/presentation_exchange/{id}/credentials/{referent}':
    get:
      parameters:
        - name: start
          in: query
          type: string
          required: false
        - name: count
          in: query
          type: string
          required: false
        - name: extra_query
          in: query
          type: string
          required: false
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: referent
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Fetch credentials for a presentation request from wallet
      produces:
        - application/json
  /presentation_exchange/create_request:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/PresentationRequestRequest'
      responses:
        '200':
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Creates a presentation request
      produces:
        - application/json
  /presentation_exchange/send_request:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/PresentationRequestRequest'
      responses:
        '200':
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Creates and sends a presentation request
      produces:
        - application/json
  '/presentation_exchange/{id}/send_presentation':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/SendPresentationRequest'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/PresentationExchange'
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Sends a credential presentation
      produces:
        - application/json
  '/presentation_exchange/{id}/verify_presentation':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/PresentationExchange'
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Verify a received credential presentation
      produces:
        - application/json
  '/presentation_exchange/{id}/remove':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - presentation_exchange *DEPRECATED*
      summary: Remove an existing presentation exchange record
      produces:
        - application/json
  /features:
    get:
      parameters:
        - name: query
          in: query
          type: string
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/QueryResult'
          description: ""
      tags:
        - server
      summary: Query supported features
      produces:
        - application/json
  '/connections/{id}/send-message':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/SendMessage'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - basicmessage
      summary: Send a basic message to a connection
      produces:
        - application/json
  '/connections/{id}/start-introduction':
    post:
      parameters:
        - name: target_connection_id
          in: query
          type: string
          required: true
        - name: message
          in: query
          type: string
          required: false
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - introduction
      summary: Start an introduction between two connections
      produces:
        - application/json
  /present-proof/records:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10PresentationExchangeList'
          description: ""
      tags:
        - present-proof
      summary: Fetch all present-proof exchange records
      produces:
        - application/json
  '/present-proof/records/{pres_ex_id}':
    get:
      parameters:
        - in: path
          name: pres_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10PresentationExchange'
          description: ""
      tags:
        - present-proof
      summary: Fetch a single presentation exchange record
      produces:
        - application/json
  '/present-proof/records/{pres_ex_id}/credentials':
    get:
      parameters:
        - name: start
          in: query
          type: string
          required: false
        - name: count
          in: query
          type: string
          required: false
        - name: extra_query
          in: query
          type: string
          required: false
        - in: path
          name: pres_ex_id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - present-proof
      summary: Fetch credentials for a presentation request from wallet
      produces:
        - application/json
  '/present-proof/records/{pres_ex_id}/credentials/{referent}':
    get:
      parameters:
        - name: start
          in: query
          type: string
          required: false
        - name: count
          in: query
          type: string
          required: false
        - name: extra_query
          in: query
          type: string
          required: false
        - in: path
          name: pres_ex_id
          required: true
          type: string
        - in: path
          name: referent
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - present-proof
      summary: Fetch credentials for a presentation request from wallet
      produces:
        - application/json
  /present-proof/send-proposal:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10PresentationProposalRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10PresentationExchange'
          description: ""
      tags:
        - present-proof
      summary: Sends a presentation proposal
      produces:
        - application/json
  /present-proof/send-request:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10PresentationRequestRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10PresentationExchange'
          description: ""
      tags:
        - present-proof
      summary: Sends a free presentation request not bound to any proposal
      produces:
        - application/json
  '/present-proof/records/{pres_ex_id}/send-request':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10PresentationRequestRequest'
        - in: path
          name: pres_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10PresentationExchange'
          description: ""
      tags:
        - present-proof
      summary: Sends a presentation request in reference to a proposal
      produces:
        - application/json
  '/present-proof/records/{pres_ex_id}/send-presentation':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/V10PresentationRequest'
        - in: path
          name: pres_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10PresentationExchange'
          description: ""
      tags:
        - present-proof
      summary: Sends a proof presentation
      produces:
        - application/json
  '/present-proof/records/{pres_ex_id}/verify-presentation':
    post:
      parameters:
        - in: path
          name: pres_ex_id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/V10PresentationExchange'
          description: ""
      tags:
        - present-proof
      summary: Verify a received presentation
      produces:
        - application/json
  '/present-proof/records/{pres_ex_id}/remove':
    post:
      parameters:
        - in: path
          name: pres_ex_id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - present-proof
      summary: Remove an existing presentation exchange record
      produces:
        - application/json
  /connections:
    get:
      parameters:
        - name: alias
          in: query
          type: string
          required: false
        - name: initiator
          in: query
          type: string
          enum:
            - self
            - external
          required: false
        - name: invitation_key
          in: query
          type: string
          required: false
        - name: my_did
          in: query
          type: string
          required: false
        - name: state
          in: query
          type: string
          enum:
            - init
            - invitation
            - request
            - response
            - active
            - error
            - inactive
          required: false
        - name: their_did
          in: query
          type: string
          required: false
        - name: their_role
          in: query
          type: string
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/ConnectionList'
          description: ""
      tags:
        - connection
      summary: Query agent-to-agent connections
      produces:
        - application/json
  '/connections/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/ConnectionRecord'
          description: ""
      tags:
        - connection
      summary: Fetch a single connection record
      produces:
        - application/json
  /connections/create-invitation:
    post:
      parameters:
        - name: alias
          in: query
          type: string
          required: false
        - name: accept
          in: query
          type: string
          enum:
            - none
            - auto
          required: false
        - name: public
          in: query
          type: integer
          required: false
        - name: multi_use
          in: query
          type: integer
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/InvitationResult'
          description: ""
      tags:
        - connection
      summary: Create a new connection invitation
      produces:
        - application/json
  /connections/receive-invitation:
    post:
      parameters:
        - name: alias
          in: query
          type: string
          required: false
        - name: accept
          in: query
          type: string
          enum:
            - none
            - auto
          required: false
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/ConnectionInvitation'
      responses:
        '200':
          schema:
            $ref: '#/definitions/ConnectionRecord'
          description: ""
      tags:
        - connection
      summary: Receive a new connection invitation
      produces:
        - application/json
  '/connections/{id}/accept-invitation':
    post:
      parameters:
        - name: my_endpoint
          in: query
          type: string
          required: false
        - name: my_label
          in: query
          type: string
          required: false
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/ConnectionRecord'
          description: ""
      tags:
        - connection
      summary: Accept a stored connection invitation
      produces:
        - application/json
  '/connections/{id}/accept-request':
    post:
      parameters:
        - name: my_endpoint
          in: query
          type: string
          required: false
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/ConnectionRecord'
          description: ""
      tags:
        - connection
      summary: Accept a stored connection request
      produces:
        - application/json
  '/connections/{id}/establish-inbound/{ref_id}':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
        - in: path
          name: ref_id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - connection
      summary: Assign another connection as the inbound connection
      produces:
        - application/json
  '/connections/{id}/remove':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - connection
      summary: Remove an existing connection record
      produces:
        - application/json
  '/connections/{id}/send-ping':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/PingRequest'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/PingRequestResponse'
          description: ""
      tags:
        - trustping
      summary: Send a trust ping to a connection
      produces:
        - application/json
  '/credential/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/Credential'
          description: ""
      tags:
        - credentials
      summary: Fetch a credential from wallet by id
      produces:
        - application/json
  '/credential/{id}/remove':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - credentials
      summary: Remove a credential from the wallet by id
      produces:
        - application/json
  /credentials:
    get:
      parameters:
        - name: start
          in: query
          type: string
          required: false
        - name: count
          in: query
          type: string
          required: false
        - name: wql
          in: query
          type: string
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialList'
          description: ""
      tags:
        - credentials
      summary: Fetch credentials from wallet
      produces:
        - application/json
  /credential_exchange:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialExchangeList'
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Fetch all credential exchange records
      produces:
        - application/json
  '/credential_exchange/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialExchange'
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Fetch a single credential exchange record
      produces:
        - application/json
  /credential_exchange/send:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/CredentialSendRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialSendResult'
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Sends a credential and automates the entire flow
      produces:
        - application/json
  /credential_exchange/send-offer:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/CredentialOfferRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialOfferResult'
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Sends a credential offer
      produces:
        - application/json
  '/credential_exchange/{id}/send-request':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialRequestResult'
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Sends a credential request
      produces:
        - application/json
  '/credential_exchange/{id}/issue':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/CredentialIssueRequest'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialIssueResult'
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Sends a credential
      produces:
        - application/json
  '/credential_exchange/{id}/store':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/CredentialStoreRequest'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialRequestResult'
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Stores a received credential
      produces:
        - application/json
  '/credential_exchange/{id}/problem_report':
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/CredentialProblemReportRequest'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Send a problem report for credential exchange
      produces:
        - application/json
  '/credential_exchange/{id}/remove':
    post:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - credential_exchange *DEPRECATED*
      summary: Remove an existing credential exchange record
      produces:
        - application/json
  /ledger/register-nym:
    post:
      parameters:
        - name: did
          in: query
          type: string
          required: true
        - name: verkey
          in: query
          type: string
          required: true
        - name: alias
          in: query
          type: string
          required: false
        - name: role
          in: query
          type: string
          required: false
      responses:
        '200':
          description: ""
      tags:
        - ledger
      summary: Send a NYM registration to the ledger.
      produces:
        - application/json
  /ledger/did-verkey:
    get:
      parameters:
        - name: did
          in: query
          type: string
          required: true
      responses:
        '200':
          description: ""
      tags:
        - ledger
      summary: Get the verkey for a DID from the ledger.
      produces:
        - application/json
  /ledger/did-endpoint:
    get:
      parameters:
        - name: did
          in: query
          type: string
          required: true
      responses:
        '200':
          description: ""
      tags:
        - ledger
      summary: Get the endpoint for a DID from the ledger.
      produces:
        - application/json
  /ledger/taa:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/TAAResult'
          description: ""
      tags:
        - ledger
      summary: 'Fetch the current transaction author agreement, if any'
      produces:
        - application/json
  /ledger/taa/accept:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/TAAAccept'
      responses:
        '200':
          description: ""
      tags:
        - ledger
      summary: Accept the transaction author agreement
      produces:
        - application/json
  /credential-definitions:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/CredentialDefinitionSendRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialDefinitionSendResults'
          description: ""
      tags:
        - credential-definition
      summary: Sends a credential definition to the ledger
      produces:
        - application/json
  /credential-definitions/created:
    get:
      parameters:
        - name: schema_id
          in: query
          type: string
          required: false
        - name: schema_issuer_did
          in: query
          type: string
          required: false
        - name: schema_name
          in: query
          type: string
          required: false
        - name: schema_version
          in: query
          type: string
          required: false
        - name: issuer_did
          in: query
          type: string
          required: false
        - name: cred_def_id
          in: query
          type: string
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialDefinitionsCreatedResults'
          description: ""
      tags:
        - credential-definition
      summary: Search for matching credential definitions that agent originated
      produces:
        - application/json
  '/credential-definitions/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/CredentialDefinitionGetResults'
          description: ""
      tags:
        - credential-definition
      summary: Gets a credential definition from the ledger
      produces:
        - application/json
  /schemas:
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/SchemaSendRequest'
      responses:
        '200':
          schema:
            $ref: '#/definitions/SchemaSendResults'
          description: ""
      tags:
        - schema
      summary: Sends a schema to the ledger
      produces:
        - application/json
  /schemas/created:
    get:
      parameters:
        - name: schema_id
          in: query
          type: string
          required: false
        - name: schema_issuer_did
          in: query
          type: string
          required: false
        - name: schema_name
          in: query
          type: string
          required: false
        - name: schema_version
          in: query
          type: string
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/SchemasCreatedResults'
          description: ""
      tags:
        - schema
      summary: Search for matching schema that agent originated
      produces:
        - application/json
  '/schemas/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/SchemaGetResults'
          description: ""
      tags:
        - schema
      summary: Gets a schema from the ledger
      produces:
        - application/json
  /wallet/did:
    get:
      parameters:
        - name: did
          in: query
          type: string
          required: false
        - name: verkey
          in: query
          type: string
          required: false
        - name: public
          in: query
          type: boolean
          required: false
      responses:
        '200':
          schema:
            $ref: '#/definitions/DIDList'
          description: ""
      tags:
        - wallet
      summary: List wallet DIDs
      produces:
        - application/json
  /wallet/did/create:
    post:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/DIDResult'
          description: ""
      tags:
        - wallet
      summary: Create a local DID
      produces:
        - application/json
  /wallet/did/public:
    get:
      parameters: []
      responses:
        '200':
          schema:
            $ref: '#/definitions/DIDResult'
          description: ""
      tags:
        - wallet
      summary: Fetch the current public DID
      produces:
        - application/json
    post:
      parameters:
        - name: did
          in: query
          type: string
          required: true
      responses:
        '200':
          schema:
            $ref: '#/definitions/DIDResult'
          description: ""
      tags:
        - wallet
      summary: Assign the current public DID
      produces:
        - application/json
  '/wallet/tag-policy/{id}':
    get:
      parameters:
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          schema:
            $ref: '#/definitions/GetTagPolicyResult'
          description: ""
      tags:
        - wallet
      summary: Get the tagging policy for a credential definition
      produces:
        - application/json
    post:
      parameters:
        - in: body
          required: false
          name: body
          schema:
            $ref: '#/definitions/SetTagPolicyRequest'
        - in: path
          name: id
          required: true
          type: string
      responses:
        '200':
          description: ""
      tags:
        - wallet
      summary: Set the tagging policy for a credential definition
      produces:
        - application/json
info:
  title: Aries Cloud Agent
  version: v0.4.1
swagger: '2.0'
definitions:
  AdminModules:
    type: object
    properties:
      result:
        type: array
        description: List of admin modules
        items:
          type: string
          description: admin module
  AdminStatus:
    type: object
    properties: {}
  PerformRequest:
    type: object
    properties:
      params:
        type: object
        description: Input parameter values
        additionalProperties:
          type: string
          example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      name:
        type: string
        description: Menu option name
        example: Query
  MenuFormParam:
    type: object
    properties:
      name:
        type: string
        description: Menu parameter name
        example: delay
      title:
        type: string
        description: Menu parameter title
        example: Delay in seconds
      default:
        type: string
        description: Default parameter value
        example: '0'
      description:
        type: string
        description: Additional descriptive text for menu form parameter
        example: Delay in seconds before starting
      type:
        type: string
        description: Menu form parameter input type
        example: int
      required:
        type: boolean
        description: Whether parameter is required
        example: 'False'
    required:
      - name
      - title
  MenuForm:
    type: object
    properties:
      title:
        type: string
        description: Menu form title
        example: Preferences
      description:
        type: string
        description: Additional descriptive text for menu form
        example: Window preference settings
      params:
        type: array
        description: List of form parameters
        example: '[alpha, x_offset, y_offset, height, width, bgcolor, fgcolor]'
        items:
          $ref: '#/definitions/MenuFormParam'
      submit-label:
        type: string
        description: Alternative label for form submit button
        example: Send
  MenuOption:
    type: object
    properties:
      name:
        type: string
        description: Menu option name (unique identifier)
        example: window_prefs
      title:
        type: string
        description: Menu option title
        example: Window Preferences
      description:
        type: string
        description: Additional descriptive text for menu option
        example: Window display preferences
      disabled:
        type: boolean
        description: Whether to show option as disabled
        example: 'False'
      form:
        $ref: '#/definitions/MenuForm'
    required:
      - name
      - title
  MenuJson:
    type: object
    properties:
      title:
        type: string
        description: Menu title
        example: My Menu
      description:
        type: string
        description: Introductory text for the menu
        example: User preferences for window settings
      options:
        type: array
        description: List of menu options
        items:
          $ref: '#/definitions/MenuOption'
      errormsg:
        type: string
        description: Optional error message to display in menu header
        example: 'Error: item not present'
    required:
      - options
  SendMenu:
    type: object
    properties:
      menu:
        description: Menu to send to connection
        allOf:
          - $ref: '#/definitions/MenuJson'
    required:
      - menu
  V10AttributeMimeTypesResult:
    type: object
    properties: {}
  V10CredentialExchange:
    type: object
    properties:
      credential_id:
        type: string
        description: Credential identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      credential_request_metadata:
        type: object
        description: (Indy) credential request metadata
      auto_offer:
        type: boolean
        description: Holder choice to accept offer in this credential exchange
        example: false
      updated_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of last record update
        example: '2020-02-06 14:45:31Z'
      state:
        type: string
        description: Issue-credential exchange state
        example: credential_acked
      raw_credential:
        type: object
        description: 'Credential as received, prior to storage in holder wallet'
      credential_proposal_dict:
        type: object
        description: Serialized credential proposal message
      auto_issue:
        type: boolean
        description: Issuer choice to issue to request in this credential exchange
        example: false
      credential_exchange_id:
        type: string
        description: Credential exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      credential:
        type: object
        description: Credential as stored
      initiator:
        type: string
        enum:
          - self
          - external
        description: 'Issue-credential exchange initiator: self or external'
        example: self
      schema_id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
      role:
        type: string
        enum:
          - holder
          - issuer
        description: 'Issue-credential exchange role: holder or issuer'
        example: issuer
      credential_request:
        type: object
        description: (Indy) credential request
      credential_offer:
        type: object
        description: (Indy) credential offer
      error_msg:
        type: string
        description: Error message
        example: credential definition identifier is not set in proposal
      parent_thread_id:
        type: string
        description: Parent thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      credential_definition_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      connection_id:
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      thread_id:
        type: string
        description: Thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      created_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of record creation
        example: '2020-02-06 14:45:31Z'
  V10CredentialExchangeListResult:
    type: object
    properties:
      results:
        type: array
        description: 'Aries#0036 v1.0 credential exchange records'
        items:
          $ref: '#/definitions/V10CredentialExchange'
  CredAttrSpec:
    type: object
    properties:
      name:
        type: string
        description: Attribute name
        example: favourite_drink
      mime-type:
        type: string
        x-nullable: true
        description: 'MIME type: omit for (null) default'
        example: image/jpeg
      value:
        type: string
        description: 'Attribute value: base64-encode if MIME type is present'
        example: martini
    required:
      - name
      - value
  CredentialPreview:
    type: object
    properties:
      '@type':
        type: string
        enum:
          - 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview'
        description: Message type identifier
        example: 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/issue-credential/1.0/credential-preview'
      attributes:
        type: array
        items:
          $ref: '#/definitions/CredAttrSpec'
    required:
      - attributes
  V10CredentialProposalRequestMand:
    type: object
    properties:
      schema_name:
        type: string
        description: Schema name
        example: preferences
      schema_version:
        type: string
        pattern: '^[0-9.]+$'
        description: Schema version
        example: '1.0'
      schema_issuer_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Schema issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      connection_id:
        type: string
        format: uuid
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      schema_id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
      issuer_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Credential issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      credential_proposal:
        $ref: '#/definitions/CredentialPreview'
      cred_def_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      comment:
        type: string
        description: Human-readable comment
    required:
      - connection_id
      - credential_proposal
  V10CredentialProposalRequestOpt:
    type: object
    properties:
      schema_name:
        type: string
        description: Schema name
        example: preferences
      schema_version:
        type: string
        pattern: '^[0-9.]+$'
        description: Schema version
        example: '1.0'
      schema_issuer_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Schema issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      connection_id:
        type: string
        format: uuid
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      schema_id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
      issuer_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Credential issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      credential_proposal:
        $ref: '#/definitions/CredentialPreview'
      cred_def_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      comment:
        type: string
        description: Human-readable comment
    required:
      - connection_id
  V10CredentialOfferRequest:
    type: object
    properties:
      connection_id:
        type: string
        format: uuid
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      credential_preview:
        $ref: '#/definitions/CredentialPreview'
      cred_def_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      auto_issue:
        type: boolean
        description: 'Whether to respond automatically to credential requests, creating and issuing requested credentials'
      comment:
        type: string
        description: Human-readable comment
    required:
      - connection_id
      - cred_def_id
      - credential_preview
  V10CredentialIssueRequest:
    type: object
    properties:
      credential_preview:
        $ref: '#/definitions/CredentialPreview'
      comment:
        type: string
        description: Human-readable comment
    required:
      - credential_preview
  V10CredentialProblemReportRequest:
    type: object
    properties:
      explain_ltxt:
        type: string
    required:
      - explain_ltxt
  PresentationExchange:
    type: object
    properties:
      verified:
        type: string
      updated_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of last record update
        example: '2020-02-06 14:45:31Z'
      state:
        type: string
      connection_id:
        type: string
      thread_id:
        type: string
      presentation_request:
        type: object
      presentation:
        type: object
      created_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of record creation
        example: '2020-02-06 14:45:31Z'
      error_msg:
        type: string
      presentation_exchange_id:
        type: string
      initiator:
        type: string
  PresentationExchangeList:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/PresentationExchange'
  RequestedAttribute:
    type: object
    properties:
      restrictions:
        type: array
        items:
          type: object
      name:
        type: string
    required:
      - name
  RequestedPredicate:
    type: object
    properties:
      p_type:
        type: string
      restrictions:
        type: array
        items:
          type: object
      p_value:
        type: string
      name:
        type: string
    required:
      - name
      - p_type
      - p_value
  PresentationRequestRequest:
    type: object
    properties:
      version:
        type: string
      requested_attributes:
        type: array
        items:
          $ref: '#/definitions/RequestedAttribute'
      name:
        type: string
      connection_id:
        type: string
      requested_predicates:
        type: array
        items:
          $ref: '#/definitions/RequestedPredicate'
    required:
      - connection_id
      - name
      - version
  SendPresentationRequest:
    type: object
    properties:
      requested_attributes:
        type: object
      requested_predicates:
        type: object
      self_attested_attributes:
        type: object
    required:
      - requested_attributes
      - requested_predicates
      - self_attested_attributes
  QueryResult:
    type: object
    properties:
      results:
        type: object
        description: Query results keyed by protocol
        additionalProperties:
          type: object
          description: Protocol descriptor
  SendMessage:
    type: object
    properties:
      content:
        type: string
        description: Message content
        example: Hello
  V10PresentationExchange:
    type: object
    properties:
      verified:
        type: string
        enum:
          - 'true'
          - 'false'
        description: 'Whether presentation is verified: true or false'
        example: 'true'
      updated_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of last record update
        example: '2020-02-06 14:45:31Z'
      state:
        type: string
        description: Present-proof exchange state
        example: verified
      connection_id:
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      thread_id:
        type: string
        description: Thread identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      role:
        type: string
        enum:
          - prover
          - verifier
        description: 'Present-proof exchange role: prover or verifier'
        example: prover
      presentation_request:
        type: object
        description: (Indy) presentation request (also known as proof request)
      presentation_proposal_dict:
        type: object
        description: Serialized presentation proposal message
      presentation:
        type: object
        description: (Indy) presentation (also known as proof)
      created_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of record creation
        example: '2020-02-06 14:45:31Z'
      error_msg:
        type: string
        description: Error message
        example: Invalid structure
      auto_present:
        type: boolean
        description: Prover choice to auto-present proof as verifier requests
        example: false
      presentation_exchange_id:
        type: string
        description: Presentation exchange identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      initiator:
        type: string
        enum:
          - self
          - external
        description: 'Present-proof exchange initiator: self or external'
        example: self
  V10PresentationExchangeList:
    type: object
    properties:
      results:
        type: array
        description: 'Aries#0037 v1.0 presentation exchange records'
        items:
          $ref: '#/definitions/V10PresentationExchange'
  PresAttrSpec:
    type: object
    properties:
      name:
        type: string
        description: Attribute name
        example: favourite_drink
      cred_def_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      mime-type:
        type: string
        description: MIME type (default null)
        example: image/jpeg
      value:
        type: string
        description: Attribute value
        example: martini
      referent:
        type: string
        description: Credential referent
        example: '0'
    required:
      - name
  PresPredSpec:
    type: object
    properties:
      name:
        type: string
        description: Attribute name
        example: high_score
      cred_def_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      predicate:
        type: string
        enum:
          - <
          - <=
          - '>='
          - '>'
        description: 'Predicate (currently, indy supports >=)'
        example: '>='
      threshold:
        type: integer
        format: int32
        description: Threshold value
    required:
      - cred_def_id
      - name
      - predicate
      - threshold
  PresentationPreview:
    type: object
    properties:
      '@type':
        type: string
        enum:
          - 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview'
        description: Message type identifier
        example: 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/present-proof/1.0/presentation-preview'
      attributes:
        type: array
        items:
          $ref: '#/definitions/PresAttrSpec'
      predicates:
        type: array
        items:
          $ref: '#/definitions/PresPredSpec'
    required:
      - attributes
      - predicates
  V10PresentationProposalRequest:
    type: object
    properties:
      connection_id:
        type: string
        format: uuid
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      presentation_proposal:
        $ref: '#/definitions/PresentationPreview'
      comment:
        type: string
        description: Human-readable comment
      auto_present:
        type: boolean
        description: 'Whether to respond automatically to presentation requests, building and presenting requested proof'
    required:
      - connection_id
      - presentation_proposal
  IndyProofReqSpecRestrictions:
    type: object
    properties:
      schema_name:
        type: string
        example: transcript
        description: Schema name
      schema_version:
        type: string
        pattern: '^[0-9.]+$'
        description: Schema version
        example: '1.0'
      credential_definition_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      schema_issuer_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Schema issuer (origin) DID
        example: WgWxqztrNooG92RXvxSTWv
      schema_id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
      issuer_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Credential issuer DID
        example: WgWxqztrNooG92RXvxSTWv
      cred_def_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
    required:
      - credential_definition_id
  IndyProofReqNonRevoked:
    type: object
    properties:
      to_epoch:
        type: integer
        format: int32
        minimum: -9223372036854776000
        maximum: 9223372036854776000
        description: Latest epoch of interest for non-revocation proof
        example: 1581000331
      from_epoch:
        type: integer
        format: int32
        minimum: -9223372036854776000
        maximum: 9223372036854776000
        description: Earliest epoch of interest for non-revocation proof
        example: 1581000331
    required:
      - from_epoch
      - to_epoch
  IndyProofReqAttrSpec:
    type: object
    properties:
      restrictions:
        type: array
        description: 'If present, credential must satisfy one of given restrictions'
        items:
          $ref: '#/definitions/IndyProofReqSpecRestrictions'
      non_revoked:
        $ref: '#/definitions/IndyProofReqNonRevoked'
      name:
        type: string
        example: favouriteDrink
        description: Attribute name
    required:
      - name
  IndyProofReqPredSpec:
    type: object
    properties:
      name:
        type: string
        example: index
        description: Attribute name
      restrictions:
        type: array
        description: 'If present, credential must satisfy one of given restrictions'
        items:
          $ref: '#/definitions/IndyProofReqSpecRestrictions'
      p_value:
        type: integer
        format: int32
        description: Threshold value
      p_type:
        type: string
        enum:
          - <
          - <=
          - '>='
          - '>'
        description: Predicate type (indy currently supports only '>=')
        example: '>='
      non_revoked:
        $ref: '#/definitions/IndyProofReqNonRevoked'
    required:
      - name
      - p_type
      - p_value
  IndyProofRequest:
    type: object
    properties:
      version:
        type: string
        pattern: '^[0-9.]+$'
        description: Proof request version
        example: '1.0'
      requested_attributes:
        type: object
        description: Requested attribute specifications of proof request
        additionalProperties:
          $ref: '#/definitions/IndyProofReqAttrSpec'
      name:
        type: string
        description: Proof request name
        example: Proof request
      nonce:
        type: string
        description: Nonce
        example: '1234567890'
      requested_predicates:
        type: object
        description: Requested predicate specifications of proof request
        additionalProperties:
          $ref: '#/definitions/IndyProofReqPredSpec'
    required:
      - requested_attributes
      - requested_predicates
  V10PresentationRequestRequest:
    type: object
    properties:
      connection_id:
        type: string
        format: uuid
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      proof_request:
        $ref: '#/definitions/IndyProofRequest'
      comment:
        type: string
    required:
      - connection_id
      - proof_request
  IndyRequestedCredsRequestedAttr:
    type: object
    properties:
      cred_id:
        type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        description: Wallet credential identifier (typically but not necessarily a UUID)
      revealed:
        type: boolean
        description: Whether to reveal attribute in proof
  IndyRequestedCredsRequestedPred:
    type: object
    properties:
      cred_id:
        type: string
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
        description: Wallet credential identifier (typically but not necessarily a UUID)
  V10PresentationRequest:
    type: object
    properties:
      requested_attributes:
        type: object
        description: Nested object mapping proof request attribute referents to requested-attribute specifiers
        additionalProperties:
          $ref: '#/definitions/IndyRequestedCredsRequestedAttr'
      requested_predicates:
        type: object
        description: Nested object mapping proof request predicate referents to requested-predicate specifiers
        additionalProperties:
          $ref: '#/definitions/IndyRequestedCredsRequestedPred'
      self_attested_attributes:
        type: object
        description: Self-attested attributes to build into proof
        additionalProperties:
          type: string
          example: self_attested_value
          description: Self-attested attribute values to use in requested-credentials structure for proof construction
    required:
      - requested_attributes
      - requested_predicates
      - self_attested_attributes
  ConnectionRecord:
    type: object
    properties:
      my_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Our DID for connection
        example: WgWxqztrNooG92RXvxSTWv
      updated_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of last record update
        example: '2020-02-06 14:45:31Z'
      state:
        type: string
        description: Current record state
        example: active
      accept:
        type: string
        enum:
          - manual
          - auto
        description: 'Connection acceptance: manual or auto'
        example: auto
      connection_id:
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      invitation_key:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$'
        description: Public key for connection
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      invitation_mode:
        type: string
        enum:
          - once
          - multi
          - static
        description: 'Invitation mode: once, multi, or static'
        example: once
      created_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of record creation
        example: '2020-02-06 14:45:31Z'
      error_msg:
        type: string
        description: Error message
        example: No DIDDoc provided; cannot connect to public DID
      their_did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: Their DID for connection
        example: WgWxqztrNooG92RXvxSTWv
      their_label:
        type: string
        description: Their label for connection
        example: Bob
      inbound_connection_id:
        type: string
        description: Inbound routing connection id to use
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      alias:
        type: string
        description: Optional alias to apply to connection for later use
        example: 'Bob, providing quotes'
      request_id:
        type: string
        description: Connection request identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      routing_state:
        type: string
        description: Routing state of connection
        example: active
      their_role:
        type: string
        description: Their assigned role for connection
        example: Point of contact
      initiator:
        type: string
        enum:
          - self
          - external
          - multiuse
        description: 'Connection initiator: self, external, or multiuse'
        example: self
  ConnectionList:
    type: object
    properties:
      results:
        type: array
        description: List of connection records
        items:
          $ref: '#/definitions/ConnectionRecord'
  ConnectionInvitation:
    type: object
    properties:
      serviceEndpoint:
        type: string
        description: Service endpoint at which to reach this agent
        example: 'http://192.168.56.101:8020'
      did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: DID for connection invitation
        example: WgWxqztrNooG92RXvxSTWv
      '@id':
        type: string
        description: Message identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      label:
        type: string
        description: Optional label for connection
        example: Bob
      recipientKeys:
        type: array
        description: List of recipient keys
        items:
          type: string
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$'
          description: Recipient public key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      routingKeys:
        type: array
        description: List of routing keys
        items:
          type: string
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$'
          description: Routing key
          example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      imageUrl:
        type: string
        format: url
        x-nullable: true
        description: Optional image URL for connection invitation
        example: 'http://192.168.56.101/img/logo.jpg'
      '@type':
        type: string
        readOnly: true
        description: Message type
        example: 'did:sov:BzCbsNYhMrjHiqZDTUASHg;spec/my-family/1.0/my-message-type'
  InvitationResult:
    type: object
    properties:
      connection_id:
        type: string
        description: Connection identifier
        example: 3fa85f64-5717-4562-b3fc-2c963f66afa6
      invitation:
        $ref: '#/definitions/ConnectionInvitation'
      invitation_url:
        type: string
        description: Invitation URL
        example: 'http://192.168.56.101:8020/invite?c_i=eyJAdHlwZSI6Li4ufQ=='
  PingRequest:
    type: object
    properties:
      comment:
        type: string
        description: Comment for the ping message
  PingRequestResponse:
    type: object
    properties:
      thread_id:
        type: string
        description: Thread ID of the ping message
  Witness:
    type: object
    properties:
      omega:
        type: string
        description: Revocation registry witness omega state
        example: 21 129EA8716C921058BB91826FD 21 8F19B91313862FE916C0 ...
  RawEncCredAttr:
    type: object
    properties:
      encoded:
        type: string
        description: (Numeric string) encoded value
        example: '412821674062189604125602903860586582569826459817431467861859655321'
      raw:
        type: string
        description: Raw value
        example: Alex
  RevReg:
    type: object
    properties:
      accum:
        type: string
        description: Revocation registry accumulator state
        example: 21 136D54EA439FC26F03DB4b812 21 123DE9F624B86823A00D ...
  Credential:
    type: object
    properties:
      schema_id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
      signature:
        type: object
        description: Digital signature
      signature_correctness_proof:
        type: object
        description: Signature correctness proof
      witness:
        $ref: '#/definitions/Witness'
      cred_def_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      values:
        type: object
        description: Attribute names mapped to their raw and encoded values
        additionalProperties:
          $ref: '#/definitions/RawEncCredAttr'
      rev_reg_id:
        type: string
        pattern: '^([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):4:([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(:.+)?:CL_ACCUM:.+$'
        description: Revocation registry identifier
        example: 'WgWxqztrNooG92RXvxSTWv:4:WgWxqztrNooG92RXvxSTWv:3:CL:20:tag:CL_ACCUM:0'
      rev_reg:
        $ref: '#/definitions/RevReg'
  CredentialList:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/Credential'
  CredentialExchange:
    type: object
    properties:
      credential_id:
        type: string
      updated_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of last record update
        example: '2020-02-06 14:45:31Z'
      state:
        type: string
      credential_definition_id:
        type: string
      credential_request_metadata:
        type: object
      connection_id:
        type: string
      thread_id:
        type: string
      schema_id:
        type: string
      credential_request:
        type: object
      raw_credential:
        type: object
      credential_values:
        type: object
      created_at:
        type: string
        pattern: '^\d{4}-\d\d-\d\d[T ]\d\d:\d\d(?:\:(?:\d\d(?:\.\d{1,6})?))?(?:[+-]\d\d:?\d\d|Z|)$'
        description: Time of record creation
        example: '2020-02-06 14:45:31Z'
      credential_offer:
        type: object
      error_msg:
        type: string
      auto_issue:
        type: boolean
      credential_exchange_id:
        type: string
      credential:
        type: object
      parent_thread_id:
        type: string
      initiator:
        type: string
  CredentialExchangeList:
    type: object
    properties:
      results:
        type: array
        items:
          $ref: '#/definitions/CredentialExchange'
  CredentialSendRequest:
    type: object
    properties:
      connection_id:
        type: string
      credential_definition_id:
        type: string
      credential_values:
        type: object
    required:
      - connection_id
      - credential_definition_id
  CredentialSendResult:
    type: object
    properties:
      credential_id:
        type: string
  CredentialOfferRequest:
    type: object
    properties:
      connection_id:
        type: string
      credential_definition_id:
        type: string
    required:
      - connection_id
      - credential_definition_id
  CredentialOfferResult:
    type: object
    properties:
      credential_id:
        type: string
  CredentialRequestResult:
    type: object
    properties:
      credential_id:
        type: string
  CredentialIssueRequest:
    type: object
    properties:
      credential_values:
        type: object
    required:
      - credential_values
  CredentialIssueResult:
    type: object
    properties:
      credential_id:
        type: string
  CredentialStoreRequest:
    type: object
    properties:
      credential_id:
        type: string
  CredentialProblemReportRequest:
    type: object
    properties:
      explain_ltxt:
        type: string
    required:
      - explain_ltxt
  TAARecord:
    type: object
    properties:
      digest:
        type: string
      version:
        type: string
      text:
        type: string
  AMLRecord:
    type: object
    properties:
      aml:
        type: object
        additionalProperties:
          type: string
      version:
        type: string
      amlContext:
        type: string
  TAAAcceptance:
    type: object
    properties:
      time:
        type: integer
        format: int32
      mechanism:
        type: string
  TAAInfo:
    type: object
    properties:
      taa_required:
        type: boolean
      taa_record:
        $ref: '#/definitions/TAARecord'
      aml_record:
        $ref: '#/definitions/AMLRecord'
      taa_accepted:
        $ref: '#/definitions/TAAAcceptance'
  TAAResult:
    type: object
    properties:
      result:
        $ref: '#/definitions/TAAInfo'
  TAAAccept:
    type: object
    properties:
      version:
        type: string
      text:
        type: string
      mechanism:
        type: string
  CredentialDefinitionSendRequest:
    type: object
    properties:
      schema_id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
      tag:
        type: string
        description: Credential definition identifier tag
        example: default
  CredentialDefinitionSendResults:
    type: object
    properties:
      credential_definition_id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
  CredentialDefinitionsCreatedResults:
    type: object
    properties:
      credential_definition_ids:
        type: array
        items:
          type: string
          pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
          description: Credential definition identifiers
          example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
  CredentialDefinition:
    type: object
    properties:
      value:
        type: object
        description: Credential definition primary and revocation values
      ver:
        type: string
        pattern: '^[0-9.]+$'
        description: Node protocol version
        example: '1.0'
      id:
        type: string
        pattern: '([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}):3:CL:(([1-9][0-9]*)|([123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+))(.+)?$'
        description: Credential definition identifier
        example: 'WgWxqztrNooG92RXvxSTWv:3:CL:20:tag'
      tag:
        type: string
        description: Tag within credential definition identifier
        example: tag
      schemaId:
        type: string
        description: Schema identifier within credential definition identifier
        example: '20'
      type:
        type: string
        default: CL
        description: 'Signature type: CL for Camenisch-Lysyanskaya'
        example: CL
  CredentialDefinitionGetResults:
    type: object
    properties:
      credential_definition:
        $ref: '#/definitions/CredentialDefinition'
  SchemaSendRequest:
    type: object
    properties:
      schema_name:
        type: string
        description: Schema name
        example: prefs
      schema_version:
        type: string
        pattern: '^[0-9.]+$'
        description: Schema version
        example: '1.0'
      attributes:
        type: array
        description: List of schema attributes
        items:
          type: string
          description: attribute name
          example: score
    required:
      - attributes
      - schema_name
      - schema_version
  SchemaSendResults:
    type: object
    properties:
      schema_id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
  SchemasCreatedResults:
    type: object
    properties:
      schema_ids:
        type: array
        items:
          type: string
          pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
          description: Schema identifiers
          example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
  Schema:
    type: object
    properties:
      version:
        type: string
        pattern: '^[0-9.]+$'
        description: Schema version
        example: '1.0'
      name:
        type: string
        description: Schema name
        example: schema_name
      ver:
        type: string
        pattern: '^[0-9.]+$'
        description: Node protocol version
        example: '1.0'
      attrNames:
        type: array
        description: Schema attribute names
        items:
          type: string
          description: Attribute name
          example: score
      id:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}:2:.+:[0-9.]+$'
        description: Schema identifier
        example: 'WgWxqztrNooG92RXvxSTWv:2:schema_name:1.0'
      seqNo:
        type: integer
        format: int32
        description: Schema sequence number
        example: 999
  SchemaGetResults:
    type: object
    properties:
      schema_json:
        $ref: '#/definitions/Schema'
  DID:
    type: object
    properties:
      verkey:
        type: string
        pattern: '^[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{43,44}$'
        description: Public verification key
        example: H3C2AVvLMv6gmMNam3uVAjZpfkcJCwDwnZn6z3wXmqPV
      public:
        type: boolean
        description: Whether DID is public
        example: false
      did:
        type: string
        pattern: '^(did:sov:)?[123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz]{21,22}$'
        description: DID of interest
        example: WgWxqztrNooG92RXvxSTWv
  DIDList:
    type: object
    properties:
      results:
        type: array
        description: DID list
        items:
          $ref: '#/definitions/DID'
  DIDResult:
    type: object
    properties:
      result:
        $ref: '#/definitions/DID'
  GetTagPolicyResult:
    type: object
    properties:
      taggables:
        type: array
        description: List of attributes taggable for credential search under current policy
        items:
          type: string
          description: Taggable attribute
          example: score
  SetTagPolicyRequest:
    type: object
    properties:
      taggables:
        type: array
        description: List of attributes to set taggable for credential search
        items:
          type: string
          description: Taggable attribute
          example: score
